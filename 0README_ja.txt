最急降下法サンプル
	Naruaki TOMA
	tnal@ie.u-ryukyu.ac.jp
	http://www.eva.ie.u-ryukyu.ac.jp/~tnal/
	2013年 12月 7日 土曜日 14時53分38秒 JST


＜目次＞
0. これは何？
1. 何のために作ったの？
2. 開発環境
3. ファイル
4. インストール
5. 使い方
6. 関数を変更する際の注意
7. 最後に
X. 考えてはいたけどやらなかったTODO


＜本文＞
0. これは何？
　関数
　　　z=f(x,y) (X_MIN <= x,y <= X_MAX)
をランダムな場所からスタートし，定義域内で最小となる最適解 x_opt を発
見する為のプログラムですが，一部欠落しています．動作させる為には以下の
箇所を作成する必要があります．
	1. double f(double x, double y);  /* 関数 f(x,y) */
	2-1. double pd_x(double x, double y); /* f(x)/dx */
	2-2. double pd_y(double x, double y); /* f(x)/dy */
	3. /* step2. 次の探索場所へ移動 */


1. 何のために作ったの？
　学生実験用に，実験時間内に最急降下法を用いた連続関数を最適化するため
のプログラムを実装し，その性能を計算機実験で検証する所までをやりたいた
め，サンプルプログラムとして作成しました．本来ならば複数回実行した平均
により評価する必要がありますが，そのようなスクリプトを作成する事も課題
の一つなので，敢えて作っていません．


2. 開発環境
  OS: Mac OS X バージョン 10.8.5
  gcc(llvm): Apple LLVM version 5.0 (clang-500.2.79) (based on LLVM 3.3svn)
  make: GNU Make 3.81

動作確認は Mac OS X でしかやっていませんが，ANSI標準ライブラリしか
使ってないので，環境に依存せずコンパイルできると思います．


3. ファイル
./0README_ja.txt	このファイル．
./Makefile
./steepest-decent.c	探索プログラム本体（これだけ）
./run_ave.sh		10試行時の平均探索回数算出スクリプト。
./trans_step_vs_func.sh	探索ステップ数あたりの目的関数推移図作成スクリプト。
./trans_x_vs_func.sh	(1変数用)探索時の挙動確認スクリプト。
./trans_xy_vs_func.sh	(2変数用)探索時の挙動確認スクリプト。


4. コンパイル
　　prompt> make


5. 使い方
5.1. プログラムの動かし方
　　prompt> ./steepest_decnt random_seed
引数として乱数生成用のシード値（任意の整数）が必要です．

5.2. 終了条件
(1) x,yが定義域を越えた場合、
(2) 前回の場所から殆ど動いていない場合、
(3) 探索回数が指定回数(term_cond)を越えた場合、
のいずれかのケースで探索を終了します。


6. 最後に
質問・ご指摘等は當間（tnal@ie.u-ryukyu.ac.jp）まで．
更新するかどうかは（私に取っての）重要度と気分次第ですが・・・．
個人的利用以外の使用については連絡してもらえるとうれしいかも．
単純にどういう所で使われるのかが興味があるだけで，制約・制限
等を課す意図は全くありません．


X. 考えてはいたけどやらなかったTODO
・いくつかのスクリプトの添付
　例えば x 回乱数生成してシミュレーションを走らせ，その結果を自動評価
　するスクリプトとか．
・MPIで並列処理．
　マシンパワーでどこまで解けるのかとか．
